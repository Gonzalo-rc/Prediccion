library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
zVentas<- log(zVentas)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
zVentas<-log(zVentas)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
library(dplyr) #To efficiently manipulate dataframes.
library(xts) #To work with extensible Time Series
require(ggplot2) #To build better graphs
library(forecast) #To use Holt (among others) models
library(urca)
library(ggfortify)
apple <- read.csv("IngresosApple.csv", sep=";")
skimr::skim(apple)
fechas <- seq(as.Date("2008-04-01"), as.Date("2017-09-30"), by = "quarter")
fechas
apple <- mutate(apple, fecha=fechas)
str(apple)
#Formato xts ordenado por las fechas
Ventas=xts(apple$Ingresos, order.by = as.Date(apple$fecha,"%Y/%m/%d"),frequency=4)
#Generamos los datos de manera trimestral
Ventas=to.quarterly(Ventas)
#Formato zoo
zVentas=as.zoo(Ventas$Ventas.Close)
#Graficamos
autoplot(zVentas)+ggtitle("Ventas Trimestrales Apple")+xlab("Trimestres")+ylab("Ventas")
#Q2 del 2008 es el primer dato del que tenemos disponibilidad
tVentas = ts(coredata(zVentas), start = c(2008, 2), frequency = 4)
#Graficamos por trimestres.
ggfreqplot(tVentas,freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Ingresos Trimestrales")
#Dejamos fuera los 3 últimos trimestres de 2017
cOmit=3
#Objetivo con la longitud de los datos
nObs=length(zVentas)
#Sub muestra
#oVentas=zVentas[1:(nObs-cOmit),]
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
etsfit<-ets(oVentas)
#Modelo de predicción
fventas.ets=forecast(etsfit)
#Resultados
etsfit$method
summary(fventas.ets)
ggtsdisplay(fventas.ets$residuals)
#Gráfico con la predicción
plot(fventas.ets)
lines(window(zVentas),type="o")
#Omitimos los últimos tres trimestres
cOmit=3
#Objeto con la longitud del dataset
nObs=length(zVentas)
#Sub-muestra
oVentas <- window(zVentas,start=index(zVentas[1]),end=index(zVentas[nObs-cOmit]))
#Datos para hacer la predicción
pVentas <- window(zVentas,start=index(zVentas[nObs-cOmit+1]),end=index(zVentas[nObs]))
fit1=auto.arima(oVentas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
df_new <- data.frame(value = as.vector(zVentas),
time = time(zVentas))
fventas.arima=forecast(fit1)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fventas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción de los ingresos de Apple")
summary(fventas.arima)
